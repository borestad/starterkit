#!/usr/bin/env node

const execa = require('execa')
const { exec, GIT, isNotCI, isCI, run, br } = require('..')

const log = str => {
  return console.log(`❯ ${str}`)
}

/**
 * PostInstall
 * Runs after `yarn install` is finished
 */
run(async function postInstall() {
  process.chdir(GIT.ROOT)

  // Note: Git LFS smudge filter breaks the CI.
  // Atm - we can only use .gitconfig in dev mode
  if (isNotCI) {
    log('Linking .gitconfig')
    await exec(`git config --local include.path ../.starterkit/config/.gitconfig`)
  }

  log('Lerna linking ...')
  await exec(`npx lerna link --loglevel warn`)

  log('Cleanup git hooks')
  exec('rm -f .git/hooks/*')

  if (isNotCI) {
    log('Install git hooks (husky)')
    await exec(`node ${GIT.ROOT}/node_modules/husky/husky.js install`, {
      stdio: 'ignore'
    })
  }

  log('Install git hooks (lfs)')
  await exec(`git lfs install --force`, {
    stdio: 'ignore'
  })

  if (isNotCI) {
    log('Deduplicating yarn.lock')
    const res = await execa('npx', ['yarn-deduplicate', '-l'])
    if (res.stdout.length) {
      console.log('    ...found duplicates:\n')
      console.log(
        res.stdout
          .split('\n')
          .map(l => `    ${l}`)
          .join('\n')
      )

      console.log('\n    ...rewriting yarn.lock:\n')
      await exec(`npx yarn-deduplicate`)

      console.log('Folder size before:')
      await exec(`npx get-folder-size --folder=node_modules`)

      log('Running `yarn install` again\n')
      await exec(`npx yarn install --ignore-scripts`)

      console.log('Folder size after:')
      await exec(`npx get-folder-size --folder=node_modules`)
    }

    // await exec(`npx yarn-deduplicate`)
  }

  if (isCI) {
    log('CLOC stats') || br()
    await exec(`npx cloc --hide-rate --vcs=git .`)
  } else {
    console.log()
  }
})
