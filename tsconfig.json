// ========================================================================
// ðŸ’¥ Typescript configuration
//
//    Documentation:
//
//    http://json.schemastore.org/tsconfig
//    https://www.typescriptlang.org/docs/handbook/compiler-options.html
//    https://basarat.gitbooks.io/typescript/content/docs/project/tsconfig.html
//
// ========================================================================s
{
  "include": [
    "**/*.d.ts",
    "**/*.ts",
    "**/*.tsx"
  ],

  "exclude": [
    // Test files are already covered by Jest
    "**/*.test.ts",
    "**/node_modules/**",
    "**/dist/**",
    "typings/browser.d.ts"
  ],

  // ========================================================================
  // ðŸ’¥ References projects ( https://www.typescriptlang.org/docs/handbook/project-references.html )
  // ========================================================================s
  "references": [],

  "compilerOptions": {

    // ========================================================================
    // ðŸ’¥ Plugins
    // ========================================================================s
    "plugins": [
      { "name": "typescript-tslint-plugin" }
    ],


    // ========================================================================s
    // ðŸ’¥ Basic options
    // =======================s=================================================s
    "declaration": true,                          // ðŸ”… Generates corresponding '.d.ts' file.
    "declarationMap": false,                      // ðŸ”… Generates a sourcemap for each corresponding '.d.ts' file.
    "importHelpers": true,                        // ðŸ”… Import emit helpers from 'tslib'.
    "lib": ["es2015", "es2016", "es2017", "dom"], // ðŸ”… Specify library files to be included in the compilation.
    "module": "commonjs",                         // ðŸ”… Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
    "noEmit": true,                               // ðŸ”… Do not emit outputs.
    "outDir": "./node_modules/.tmp/build.ts",     // ðŸ”… Redirect output structure to the directory.
    "rootDir": ".",                               // ðŸ”… Specify the root directory of input files. Use to control the output directory structure with --outDir.
    "sourceMap": true,                            // ðŸ”… Allow javascript files to be compiled.
    "target": "esnext",                           // ðŸ”… Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'.
    // "allowJs": true,                           // ðŸ”… Report errors in .js files.
    // "checkJs": true,                           // ðŸ”… Generates corresponding '.map' file.
    // "composite": true,                         // ðŸ”… Enable project compilation
    // "downlevelIteration": true,                // ðŸ”… Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
    // "isolatedModules": true,                   // ðŸ”… Transpile each file as a separate module (similar to 'ts.transpileModule').
    // "jsx": "preserve",                         // ðŸ”… Specify JSX code generation: 'preserve', 'react-native', or 'react'.
    // "outFile": "./",                           // ðŸ”… Concatenate and emit output to single file.
    // "removeComments": true,                    // ðŸ”… Do not emit comments to output.
    // "skipLibCheck": true,                      // ðŸ”… Improve performance by skippping type checking of all declaration files (*.d.ts). (May be risky)


    // ========================================================================s
    // ðŸ’¥ Strict Type-Checking Options
    // ========================================================================s
    "strict": true,                           // ðŸ”… Enable all strict type-checking options.
    "noImplicitAny": false,                   // ðŸ”… Raise error on expressions and declarations with an implied 'any' type.
    // "strictNullChecks": true,              // ðŸ”… Enable strict null checks.
    // "strictFunctionTypes": true,           // ðŸ”… Enable strict checking of function types.
    // "strictPropertyInitialization": true,  // ðŸ”… Enable strict checking of property initialization in classes.
    // "noImplicitThis": true,                // ðŸ”… Raise error on 'this' expressions with an implied 'any' type.
    // "alwaysStrict": true,                  // ðŸ”… Parse in strict mode and emit "use strict" for each source file.


    // ========================================================================s
    // ðŸ’¥ Additional Checks
    // ========================================================================s
    "noUnusedLocals": true,                // ðŸ”… Report errors on unused locals.
    "noUnusedParameters": true,            // ðŸ”… Report errors on unused parameters.
    // "noImplicitReturns": true,             // ðŸ”… Report error when not all code paths in function return a value.
    // "noFallthroughCasesInSwitch": true,    // ðŸ”… Report errors for fallthrough cases in switch statement.


    // ========================================================================s
    // ðŸ’¥ Module Resolution Options
    // ========================================================================s
    // Warning: allowSyntheticDefaultImports MAY trigger undesired behavior: https://github.com/Microsoft/vscode/issues/63013
    "allowSyntheticDefaultImports": false,    // ðŸ”… Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "baseUrl": ".",                           // ðŸ”… Base directory to resolve non-absolute module names.
    "esModuleInterop": true,                  // ðŸ”… Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    "moduleResolution": "node",               // ðŸ”… Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    "resolveJsonModule": true,                // ðŸ”… Allows for importing, extracting types from and generating .json files
    // "paths": {},                           // ðŸ”… A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
    // "preserveSymlinks": true,              // ðŸ”… Do not resolve the real path of symlinks.
    // "rootDirs": [],                        // ðŸ”… List of root folders whose combined content represents the structure of the project at runtime.
    "typeRoots": [                            // ðŸ”… List of folders to include type definitions from.
      "node_modules/@types",
      "types"
    ],
    // "types": [],                           // ðŸ”… Type declaration files to be included in compilation.


    // ========================================================================s
    // ðŸ’¥ Source Map Options
    // ========================================================================s
    // "sourceRoot": "./",                    // ðŸ”… Specify the location where debugger should locate TypeScript files instead of source locations.
    // "mapRoot": "./",                       // ðŸ”… Specify the location where debugger should locate map files instead of generated locations.
    // "inlineSourceMap": true,               // ðŸ”… Emit a single file with source maps instead of having a separate file.
    // "inlineSources": true,                 // ðŸ”… Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.


    // ========================================================================s
    // ðŸ’¥ Experimental Options
    // ========================================================================s
    "experimentalDecorators": true,           // ðŸ”… Enables experimental support for ES7 decorators.
    "emitDecoratorMetadata": true             // ðŸ”… Enables experimental support for emitting type metadata for decorators.


    // ========================================================================s
    // ðŸ’¥ Advanced Options
    // ========================================================================s
    // "declarationDir": "dist/types"         // Output directory for generated declaration files.
  }
}
